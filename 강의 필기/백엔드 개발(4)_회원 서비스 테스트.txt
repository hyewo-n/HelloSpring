> 회원 관리 예제 - 백엔드 개발 : 회원 서비스 테스트

# 테스트 클래스 만드는 단축키 : ?
  -> 패키지도 똑같이 만들어짐

# 테스트의 함수는 한글 이름을 적어도 됨.
   테스크 코드는 실제 코드에 포함되지 않음

# 테스트 코드를 작성할 때> ** given when then
  - given : 뭔가가 주어져서   // 이것을 검증하는구나
  - when : 이것을 실행했을 때   // 이 데이터를 기반으로 하는구나
  - then : 결과가 이게 나와야 함   // 이게 검증부구나

# 테스트는 정상 플로어보다 예외 플로어가 훨씬 중요함

# join()은 저장이 되는 것도 중요한데
  중복 검증 로직을 잘 파서 예외 상황이 나오는 것도 잘 봐야함
 - 방법1. try~catch문
 - 방법2. IllegalStateException e = assertThrows(IllegalStateException.class, () -> memberService.join(member2));

# 회원가입과 중복 회원 예외에서 같은 변수를 사용한다면?
  -> 중복 회원 예외 함수에서 첫 번째 값을 입력하자마자 예외가 생겨버림
  -> 그래서 테스트 하나 진행 후 값을 clear 해주어야 함
  -> 근데 MemberService() 하나 밖에 없음 -> clear가 안됌
  -> MemoryMemberRepository를 가져온 후 초기화

# MemberService에 있는 멤버 리포지터리 & Test에 있는 new 멤버 리포지터리는 서로 다른 객체
   두 개를 사용할 이유 없고 같은 것을 사용하는 것이 나음
   다른 인스턴스이기 때문에 내용물이 달라지거나 그럴 수 있음
  - new를 지우고 constructor를 이용하여 외부에서 넣어주도록 바꾸어준다(직접 생성x)
  - MemberService를 생성할 때 MemoryMemberRepository()를 직접 넣어줌
    -> @BeforeEach : 동작하기 전에 실행
  - beforeEach 함수 작성
